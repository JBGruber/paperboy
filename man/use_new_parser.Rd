% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_dev.R
\name{use_new_parser}
\alias{use_new_parser}
\title{Create a new parser}
\usage{
use_new_parser(x, author = "", issue = "", rss = NULL, test_data = NULL)
}
\arguments{
\item{x}{A character string of a URL to the newspaper to create a parser for.}

\item{author}{A Markdown formatted character string of the author of the
parser.}

\item{issue}{A Markdown formatted link to the issue associated with the
parser (please file an issue before starting to work on a new parser).}

\item{rss}{An optional character string of the RSS feed associated with the
parser.}

\item{test_data}{An optional data frame of test data to use for testing the
parser.}
}
\value{
A message indicating the success or failure of the parser creation.
}
\description{
Create a new parser for a given domain.
}
\details{
The function will process through the steps for creating a new
parser, which are:
\enumerate{
\item Creating a file from the parser template
\item Trying to find an RSS feed link
\item Add a new entry to the status.csv file, which contains information about all parsers.
\item Edit the parsers to extract required and additional information from articles on the site.
\item Check the parser for consistency (can it be loaded? are all entries present?).
\item Check against test data (either provided in the function or downloaded from the RSS feed).
\item Finalise CSV entry
}

As might be obvious, not all steps can be performed in a single action.
Rather the idea is to run the function multiple times, until all is done.
}
\examples{
use_new_parser(x = "https://www.buzzfeed.com/",
               author = "[@JBGruber](https://github.com/JBGruber/)",
               issue = "[#1](https://github.com/JBGruber/paperboy/issues/1)",
               rss = "https://www.buzzfeed.com/rss")
}
